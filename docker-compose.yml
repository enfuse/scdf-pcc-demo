version: '3.2'
networks:
  default:
    ipam:
      driver: default
      config:
        - subnet: 172.19.0.0/24

services:
  dns:
    image: coredns/coredns:1.2.0
    command: -conf /etc/coredns/Corefile
    container_name: dns
    networks:
      default:
        ipv4_address: 172.19.0.2
        aliases: [ns1.localhost]
    ports:
      - "5300:53/udp"
    volumes:
      - ./docker/dns:/etc/coredns

  postgres:
    image: postgres:9.6
    depends_on: [dns]
    dns: [172.19.0.2]
    container_name: postgres
    networks:
      default:
        aliases: [db1.localhost]
    ports:
      - "5432:5432"
    # environment:
      # - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      # - ./pgdata:/var/lib/postgresql/data/pgdata
      - ./docker/postgres/initdb:/docker-entrypoint-initdb.d

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: rabbitmq.localhost
    depends_on: [dns]
    dns: [172.19.0.2]
    networks:
      default:
        aliases: [rabbitmq.localhost]
    ports:
      - "15672:15672"
      - "5672:5672"

  locator:
    image: apachegeode/geode
    container_name: locator
    hostname: locator.localhost
    depends_on: [dns]
    dns: [172.19.0.2]
    networks:
      default:
        aliases: [locator.localhost]
    expose:
      - "10334"
      - "1099"
      - "7575"
    #  - "1024"
    ports:
      - "1099:1099"
      - "10334:10334"
      - "7575:7575"
      - "7070:7070"
    volumes:
      - ./docker/:/docker/
    command: /docker/geode/gfshWrapper.sh gfsh start locator --name=locator.localhost --mcast-port=0

  server:
    image: apachegeode/geode
    container_name: server
    hostname: server.localhost
    depends_on: [dns, locator]
    dns: [172.19.0.2]
    networks:
      default:
        aliases: [server.localhost]
    links:
      - locator:locator
    expose:
      - "8080"
      - "40404"
      - "1099"
    ports:
      - "40404:40404"
      - "7071:7070"
    volumes:
      - ./docker/:/docker/
    command: /docker/geode/startServer.sh --server-port=40404 --max-heap=1G

  geode-config:
    image: alpine
    depends_on: [dns, server, locator]
    container_name: geode-config
    volumes:
      - ./docker:/docker
    command: docker/geode/setup.sh

  scdf:
    image: springcloud/spring-cloud-dataflow-server-local:1.7.3.RELEASE
    container_name: scdf
    depends_on: [dns, postgres, rabbitmq, server, locator]
    dns: [172.19.0.2]
    networks:
      default:
        aliases: [dataflow.localhost]
    ports:
      - "9393:9393"
      - "9995-9998:9995-9998"
    volumes:
      - ~/.m2:/root/.m2
    environment:
      - spring.cloud.deployer.local.javaOpts=-Dspring.profiles.active=docker
      - spring.cloud.dataflow.applicationProperties.stream.spring.profiles.include=docker

      - spring.cloud.dataflow.applicationProperties.stream.spring.rabbitmq.host=rabbitmq.localhost

      - spring.datasource.url=jdbc:postgresql://db1.localhost:5432/scdf
      - spring.datasource.username=scdf
      - spring.datasource.password=scdf
      - spring.datasource.driver-class-name=org.postgresql.Driver

  scdf-config:
    image: alpine
    depends_on: [dns, scdf]
    container_name: scdf-config
    volumes:
      - ./docker:/docker
    command: docker/scdf/setup.sh
